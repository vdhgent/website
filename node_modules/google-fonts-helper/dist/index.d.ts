import { Headers } from 'got';

interface GoogleFonts {
    families?: Families;
    display?: string;
    subsets?: string[] | string;
    text?: string;
}
interface Families {
    [family: string]: boolean | number | number[] | FamilyStyles;
}
interface FamilyStyles {
    [style: string]: boolean | number | number[];
}
interface FontInputOutput {
    inputFont: string;
    outputFont: string;
    inputText: string;
    outputText: string;
}
interface DownloadOptions {
    base64: boolean;
    overwriting: boolean;
    outputDir: string;
    stylePath: string;
    fontsDir: string;
    fontsPath: string;
    headers: Headers;
}

declare class GoogleFontsHelper {
    private fonts;
    constructor(fonts?: GoogleFonts);
    getFonts(): GoogleFonts;
    constructURL(): string | false;
    merge(...values: Array<GoogleFonts | GoogleFontsHelper>): void;
    static isValidURL(url: string): boolean;
    static parse(url: string): GoogleFontsHelper;
    static download(url: string, options?: Partial<DownloadOptions>): Promise<void>;
}

export { DownloadOptions, Families, FamilyStyles, FontInputOutput, GoogleFonts, GoogleFontsHelper };
